
{{!---------- SEARCH BAR ----------}}
<section id="search-bar">
  <form class="form-inline my-2 my-lg-0 d-flex justify-content-center py-5" method="GET" action="/game/search">
    <select class="custom-select" name="platform">
      <option id="select-platform" value="" selected hidden>Search platform</option>
      <option value="Xbox">Xbox</option>
      <option value="Playstation">Playstation</option>
      <option value="Nintendo Switch">Nintendo Switch</option>
    </select>
    <input class="form-control mr-sm-2 game-search" type="search" placeholder="Search your favourite game" name="name" aria-label="Search">
    <button class="btn btn-secondary my-2 my-sm-0 pr-3" type="submit">
      <svg class="mr-2" width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-search" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
        <path fill-rule="evenodd" d="M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z"/>
        <path fill-rule="evenodd" d="M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z"/>
      </svg>
      Search
    </button>
  </form>
</section>


{{!---------- CAROUSEL - MOBILE ----------}}
<div id="carouselExampleInterval" class="carousel slide d-flex d-md-none" data-ride="carousel" data-touch="true" data-keyboard="true">
  <div class="carousel-inner">
    <div class="carousel-item active" data-interval="2000">
      <a href="game/{{games.1.id}}">
        <img src="{{games.1.photo}}" class="d-block mx-auto w-75" alt="{{games.1.name}}">
      </a>
    </div>
    {{#each games}}
    <div class="carousel-item" data-interval="4000">
      <a href="game/{{id}}">
        <img src="{{photo}}" class="d-block mx-auto w-75" alt="{{name}}">
     </a>
    </div>
    {{/each}}
  </div>
  <a class="carousel-control-prev" href="#carouselExampleInterval" role="button" data-slide="prev">
    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
    <span class="sr-only">Previous</span>
  </a>
  <a class="carousel-control-next" href="#carouselExampleInterval" role="button" data-slide="next">
    <span class="carousel-control-next-icon" aria-hidden="true"></span>
    <span class="sr-only">Next</span>
  </a>
</div>


{{!---------- GAMES GRID - DESKTOP ----------}}

<h2 class="d-none d-md-flex justify-content-center text-white">Check our lastest games</h2>

<section id="games-grid" class="pt-3 pb-5">
  <div class="container">
    <div class="row">
      {{#each games}}
        <div class="col-lg-3 col-md-6 mb-5">
          <div class="card bg-light mb-5 mb-lg-0">
            <div class="card-body">
              <a class="text-dark" href="game/{{id}}">
                <div class="img-thumbnail bg-light games-grid-image mb-3">
                  <img class="img-fluid" src="{{photo}}" alt="{{name}}">
                </div>
                <h6 class="text-center mb-4">{{name}}</h6>
                <a href="game/{{id}}" class="btn btn-block btn-primary text-uppercase">Details</a>
              </a>
            </div>
          </div>
        </div>
      {{/each}}
    </div>
  </div>
</section>



{{!---------- MAP ----------}}
<h2 class="text-white text-center">Meet our traders</h2>
<div id="map-container" class="mx-auto"></div>



<script>
  function init () {
    const mapContainerElement = document.getElementById('map-container');
    const styledMapType = new google.maps.StyledMapType(
      [
        {
            "featureType": "administrative",
            "elementType": "labels.text.fill",
            "stylers": [
                {
                    "color": "#6195a0"
                }
            ]
        },
        {
            "featureType": "administrative.province",
            "elementType": "geometry.stroke",
            "stylers": [
                {
                    "visibility": "off"
                }
            ]
        },
        {
            "featureType": "landscape",
            "elementType": "geometry",
            "stylers": [
                {
                    "lightness": "0"
                },
                {
                    "saturation": "0"
                },
                {
                    "color": "#f5f5f2"
                },
                {
                    "gamma": "1"
                }
            ]
        },
        {
            "featureType": "landscape.man_made",
            "elementType": "all",
            "stylers": [
                {
                    "lightness": "-3"
                },
                {
                    "gamma": "1.00"
                }
            ]
        },
        {
            "featureType": "landscape.natural.terrain",
            "elementType": "all",
            "stylers": [
                {
                    "visibility": "off"
                }
            ]
        },
        {
            "featureType": "poi",
            "elementType": "all",
            "stylers": [
                {
                    "visibility": "off"
                }
            ]
        },
        {
            "featureType": "poi.park",
            "elementType": "geometry.fill",
            "stylers": [
                {
                    "color": "#bae5ce"
                },
                {
                    "visibility": "on"
                }
            ]
        },
        {
            "featureType": "road",
            "elementType": "all",
            "stylers": [
                {
                    "saturation": -100
                },
                {
                    "lightness": 45
                },
                {
                    "visibility": "simplified"
                }
            ]
        },
        {
            "featureType": "road.highway",
            "elementType": "all",
            "stylers": [
                {
                    "visibility": "simplified"
                }
            ]
        },
        {
            "featureType": "road.highway",
            "elementType": "geometry.fill",
            "stylers": [
                {
                    "color": "#fac9a9"
                },
                {
                    "visibility": "simplified"
                }
            ]
        },
        {
            "featureType": "road.highway",
            "elementType": "labels.text",
            "stylers": [
                {
                    "color": "#4e4e4e"
                }
            ]
        },
        {
            "featureType": "road.arterial",
            "elementType": "labels.text.fill",
            "stylers": [
                {
                    "color": "#787878"
                }
            ]
        },
        {
            "featureType": "road.arterial",
            "elementType": "labels.icon",
            "stylers": [
                {
                    "visibility": "off"
                }
            ]
        },
        {
            "featureType": "transit",
            "elementType": "all",
            "stylers": [
                {
                    "visibility": "simplified"
                }
            ]
        },
        {
            "featureType": "transit.station.airport",
            "elementType": "labels.icon",
            "stylers": [
                {
                    "hue": "#0a00ff"
                },
                {
                    "saturation": "-77"
                },
                {
                    "gamma": "0.57"
                },
                {
                    "lightness": "0"
                }
            ]
        },
        {
            "featureType": "transit.station.rail",
            "elementType": "labels.text.fill",
            "stylers": [
                {
                    "color": "#43321e"
                }
            ]
        },
        {
            "featureType": "transit.station.rail",
            "elementType": "labels.icon",
            "stylers": [
                {
                    "hue": "#ff6c00"
                },
                {
                    "lightness": "4"
                },
                {
                    "gamma": "0.75"
                },
                {
                    "saturation": "-68"
                }
            ]
        },
        {
            "featureType": "water",
            "elementType": "all",
            "stylers": [
                {
                    "color": "#eaf6f8"
                },
                {
                    "visibility": "on"
                }
            ]
        },
        {
            "featureType": "water",
            "elementType": "geometry.fill",
            "stylers": [
                {
                    "color": "#c7eced"
                }
            ]
        },
        {
            "featureType": "water",
            "elementType": "labels.text.fill",
            "stylers": [
                {
                    "lightness": "-49"
                },
                {
                    "saturation": "-53"
                },
                {
                    "gamma": "0.79"
                }
            ]
        }
      ],
      {name: 'Styled Map'}
    );
    const map = new window.google.maps.Map(mapContainerElement, {
      center: {
         lat: 38.77,
        lng: -9.13
      },
      zoom: 14,
      mapTypeControlOptions: {
            mapTypeIds: ['roadmap', 'satellite', 'hybrid', 'terrain',
                    'styled_map']
          }
    });
    map.mapTypes.set('styled_map', styledMapType);
    map.setMapTypeId('styled_map');

    const users = {{{ json users }}};
    for (let user of users) {
      const marker = new window.google.maps.Marker({
        map,
        position: {
          lat: user.location.coordinates[0],
          lng: user.location.coordinates[1]
        }
      });
      marker.addListener('click', () => {
        const endpoint = `/profile/${ user._id }`;
        window.location = endpoint;
      });
    }
  }
</script>

<script>
  const triggerLocationButton = document.getElementById('trigger-location');
  const latitudeInputElement = document.getElementById('latitude-input');
  const longitudeInputElement = document.getElementById('longitude-input');
  triggerLocationButton.addEventListener('click', () => {
    window.navigator.geolocation.getCurrentPosition(position => {
      const latitude = position.coords.latitude;
      const longitude = position.coords.longitude;
      latitudeInputElement.value = latitude;
      longitudeInputElement.value = longitude;
    }, error => {
      console.log(error);
    })
  });
</script>

<script defer src="https://maps.googleapis.com/maps/api/js?key={{environmentVariables.GOOGLE_MAPS_API_KEY}}&callback=init"></script>
